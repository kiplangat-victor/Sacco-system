trigger:
  branches:
    include:
      - main
      - test
pool:
  name: 'default'

variables: 
    GRADLE_USER_HOME: $(Pipeline.Workspace)/.gradle
    IMAGE_NAME: system
    K8S_NAMESPACE_DEVELOPMENT: development
    K8S_NAMESPACE_PRODUCTION: production
    DEPLOYMENT_NAME: pod-info-deployment
stages:
  - stage: Build_And_Test
    jobs:
      - job: 
        displayName: 'Build and Test'
        steps:
            - script: |
                sudo apt-get update
                sudo apt-get install -y openjdk-18-jdk
                echo "##vso[task.prependpath]/usr/lib/jvm/java-18-openjdk-amd64/bin"
                java -version
              displayName: 'set up java'
            - script: |
                chmod +x ./Backend/system_config_service/gradlew
              displayName: 'make gradlew executable'
            - script: |
                cd ./Backend/system_config_service
                ./gradlew build
              displayName: 'build with gradle'
              env:
               GRADLE_USER_HOME: $(GRADLE_USER_HOME)
            - script: |
                cd ./Backend/system_config_service
                ./gradlew test
              displayName: 'RUn Test With Gradle'
              env: 
                GRADLE_USER_HOME: $(GRADLE_USER_HOME)
            - task: Docker@2
              inputs: 
                containerRegistry: 'testings'
                repository: '$(IMAGE_NAME)'
                command:  'buildAndPush'
                Dockerfile: 'Backend/system_config_service/Dockerfile'
                tags: |
                  latest
                  $(Build.BuildId)
  - stage: Deploy_To_staging
    dependsOn: Build_And_Test
    jobs: 
    - job: Deploy_to_Staging_Job
      displayName: 'Diploy to staging'
      steps:
        - task: KubernetesManifest@0
          inputs:
            actions: 'deploy'
            KubernetesServiceConnection: 'workings'
            namespace: '$(K8S_NAMESPACE_DEVELOPMENT)'
            manifests: |
             $(Build.SourcesDirectory)/Backend/system_config_service/deployment.yaml
            containers: |
             $(IMAGE_NAME):$(Build.BuildId)
            arguments: '--validate=false'

  - stage: Deploy_To_production
    dependsOn: Deploy_to_Staging
    jobs:
      - job: Deploy_to_Staging_Job
        displayName: 'Deploy to production'
        steps:
          - task: KubernetesManifest@0
            inputs:
              actions: 'deploy'
              KubernetesServiceConnection: 'pworkings'
              namespace: '$(K8S_NAMESPACE_PRODUCTION)'
              manifests: |
               $(Build.SourcesDirectory)/Backend/system_config_service/k8service.yaml
              containers: |
               $(IMAGE_NAME):$(Build.BuildId)
              arguments: '--validate=false'
      